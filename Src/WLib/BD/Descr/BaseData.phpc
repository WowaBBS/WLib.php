<?
  $Loader->Load_Class('/Object');
  $Loader->Load_Type('/BD/Descr/Trait/Types'); // TODO: Load_Trait
 
  Class C_BD_Descr_BaseData Extends C_Object
  {
    Use T_BD_Descr_Trait_Types;
    Var $Tables =[];
    Var $ExprFactory=null;
    
    Function Create_Table($Name, $Descr=[])
    {
      $Table=$this->Create_Object('/BD/Descr/Table', ['BaseData'=>$this, 'Descr'=>$Descr, 'TableName'=>$Name]);
      if(IsSet($this->Tables[$Name]))
        $this->Log('Error', 'Table ', $Name, ' already exists');
      return $this->Tables[$Name]=$Table;
    }
    
    Function Update_Table($Name, $Descr)
    {
      if($Table=$this->Tables[$Name]?? null)
        $Table->Update_Descr($Descr);
      else
        $this->Log('Fatal', 'Table ', $Name, ' not found');
    }
    
    Protected Function _Init($Args)
    {
      ForEach($Args['Descr']As $Item)
      {
        $Type=Array_Shift($Item);
        if($Type==='Update')
          $Type.='/'.Array_Shift($Item);
        Switch($Type)
        {
        Case 'Table'        : $Name=Array_Shift($Item); $this->Create_Table ($Name, $Item); Break;
        Case 'Update/Table' : $Name=Array_Shift($Item); $this->Update_Table ($Name, $Item); Break;
        Case 'Enum'         : $Name=Array_Shift($Item); $this->Create_Enum  ($Name, $Item); Break;
        Case 'Update/Enum'  : $Name=Array_Shift($Item); $this->Update_Enum  ($Name, $Item); Break;
        Case 'Type'         : $Name=Array_Shift($Item); $this->Create_Type  ($Name, $Item); Break;
        Default: $this->Log('Error', 'Descr type "', $Type, '" not found');
        }
      } 
      parent::_Init($Args);
    }

    Protected Function _Done()
    {
      parent::_Done();
    }
    
    Function _GetExprFactory()
    {
      return $this->ExprFactory=$this->Get_Singleton('/BD/Expr/Factory');
    }
    
    Function GetExprFactory()
    {
      return $this->ExprFactory?? $this->_GetExprFactory();
    }
 
    Function Types_GetParent()
    {
      return null;
    }
    
    Protected Function _Debug_Info(Array &$Res)
    {
      Parent::_Debug_Info($Res);
      unset($Res['ExprFactory']);
    }
    
  # Function GetTable($Name): C_BD_Descr_Table
  # {
  #   If(!IsSet($this->Tables[$Name]))
  #     $this->Tables[$Name]=$this->Manager->Create_Table($this, $Name);
  #   Return $this->Tables[$Name];
  # }
  }
?>