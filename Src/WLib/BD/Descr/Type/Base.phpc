<?
  $Loader->Load_Class('/Object');
  $Loader->Load_Type('/BD/Descr/Trait/Args'); // TODO: Load_Trait
 
  Class C_BD_Descr_Type_Base Extends C_Object
  {
    Use T_BD_Descr_Trait_Args;
  //Var $TypeName='';
  
    Protected Function _Init($Args)
    {
    //$this->TypeName=$Args['TypeName'];
      parent::_Init($Args);
    }

    Protected Function _Done()
    {
      parent::_Done();
    }
    
    Function Get_Type($Descr)
    {
      if(Is_String($Descr))
        $Descr=[$Descr];
      $TypeName=Static::Args_PopOrGet($Descr, 'Type');
      if($Type=$this->Get_Singleton('/BD/Descr/Type/'.$TypeName, [], ['Safe'=>True]))
        return $Type->Create($Descr);
        
      $this->Log('Error', 'TypeName ', $TypeName, ' not found')->Debug($Descr);
      return null;
    }
    
    Function _Get_Type($TypeName, $Args)
    {
      if($Type=$this->Get_Singleton('/BD/Descr/Type/'.$TypeName, $Args))
        return $Type;
        
      $this->Log('Error', 'TypeName ', $TypeName, ' not found')->Debug($Args);
      return null;
    }
    
    Function IsEnum() { return False; }
    
    Function GetTypeName() { return Get_Class($this); }
    
    Function Create($Descr)
    {
      if($Descr)
        $this->Log('Error', 'Descr is not supported for ', $this->GetTypeName())->Debug($Descr);
      return $this;
    }
  }
?>