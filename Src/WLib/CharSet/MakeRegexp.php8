<?
  for($F=__FILE__; $F;) if(@include($F=DirName($F)).'/Using.php') break;
  $Loader->GetLogger()->Add('MakeRegExp.log');

  Function Analyze(&$Cache, &$Ids, &$M)
  {
    ForEach($M As $k=>&$m)
      Analyze($Cache, $Ids, $m);
      
    $Key=Serialize($M);
    $Id=$Ids[$Key]??=Count($Cache);
  //$M['Id']=$Id;
    $Cache[$Id]??=$M;
    $M=$Id;
  }
  
  Function CharsToRegexp($List)
  {
    Sort($List);
    $Left=-1;
    $Res=[];
    $Pos=0;
    ForEach($List As $Char)
      If($Left<0)
      {
        $Left=Ord($Char);
        $Res[$Pos]='\\x'.StrToUpper(Bin2Hex($Char));
      }
      ElseIf($Left+1===Ord($Char))
      {
        $Left=Ord($Char);
        $Res[$Pos]=SubStr($Res[$Pos], 0, 4).'-\\x'.StrToUpper(Bin2Hex($Char));
      }
      Else
      {
        $Pos++;
        $Left=Ord($Char);
        $Res[$Pos]='\\x'.StrToUpper(Bin2Hex($Char));
      }
    If(Count($Res)===1)
    {
      $Res=$Res[0];
      If(StrLen($Res)===4)
        Return $Res;
      If($Res==='\\x00-\\xFF')
        Return '.';
    }
    Else
      $Res=Implode('', $Res);
    Return '['.$Res.']';
  }
  
  Function MakeRegexp($To)
  {
    $M=[];
    For($i=0; $i<0x110000; $i++)
      If($i>>11!==27)
      {
        $s=IConv('UTF-32BE',$To, $S=Pack('N*', $i));
        $m=&$M;
        For($j=0, $l=StrLen($s); $j<$l; $j++)
        {
          $m=&$m[$s[$j]]?? [];
          $m??=[];
        }
        If(!StrLen($s))
          Echo Bin2Hex($S), "\n";
      }
      
    $Cache =[];
    $Ids   =[];
    $Build =[];
    Analyze($Cache, $Ids, $M);
  //Print_R($Cache);
    
    ForEach($Cache As $Id=>$m)
    {
      $Map=[];
      ForEach($m As $Char=>$v)
        $Map[$v][]=$Char;
      If(!$Map)
        $Reg='';
      Else
      {
        $Reg=[];
        ForEach($Map As $v=>$Chars)
          $Reg[]=CharsToRegexp($Chars).$Build[$v];
        If(Count($Reg)===1)
          $Reg=$Reg[0];
        Else
          $Reg='(?:'.Implode('|', $Reg).')';
      }
      $Build[$Id]=$Reg;
    }
    Return $Build[$M];
  }
  
  $CharSets=[
    'UTF-8'    ,
    'UTF-16BE' ,
    'UTF-16LE' ,
    'UTF-32BE' ,
    'UTF-32LE' ,
  ];
  ForEach($CharSets As $To)
    $Loader->Log('Log', 'Regexp for ', $To,' is ', MakeRegexp($To));
//Print_R($M);
?>