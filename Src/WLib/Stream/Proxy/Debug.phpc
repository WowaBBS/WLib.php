<?
  $Loader->Parent_Class('/Stream/Proxy/Base');
 
  Class C_Stream_Proxy_Debug Extends C_Stream_Proxy_Base
  {
    Var $Mode  =''    ;
    Var $Debug =Null  ;
    Var $IsEof =False ;
    Var $Idx   =0     ;

    Function _Init(Array $Args)
    {
      parent::_Init($Args);
    //$this->Debug=$this->Create_Object('/Stream/File');
      $Task=$this->Object_GetLoader()->Object('Task'); // TODO: Deprecated?
      $this->Debug=$Task->Create_Log('Debug_Proxy.log');
    }

    Function _Done()
    {
      $this->Debug->Done();
      parent::_Done();
    }

    Function Open($AStream)
    {
      parent::Open($AStream);
    //$this->Debug->Open('./proxy_'.$this->Idx.'.log', 'a+');
    //$this->Debug->Lock();
      $this->Set_Mode('Open', 'Ok');
    }

    Function Set_Mode($AMode, $Info='')
    {
      If($this->Mode==$AMode)
        Return;
      $this->Mode=$AMode;
      $this->Debug_Write("\n>>> ".$AMode.($Info? ' '.$Info:" >>>\n"));
    }

    Function Eof()
    {
      $Res=parent::Eof();
      If($Res!=$this->IsEof)
        $this->Set_Mode('Eof', $Res? 'True':'False');
      $this->IsEof=$Res;
      Return $Res;
    }

    Function Flush()
    {
      $this->Set_Mode('Flush', 'Ok');
      Return parent::Flush();
    }

    Function Read($Size)
    {
      $this->Set_Mode('Read');
      $Res=parent::Read($Size);
      $this->Debug_Write($Res);
      Return $Res;
    }

    Function Write($Data)
    {
      $this->Set_Mode('Write');
      $this->Debug_Write($Data);
      Return parent::Write($Data);
    }

    Function Close()
    {
      If($this->Mode!='Close')
      {
        $this->Set_Mode('Close', 'Ok');
      //$this->Debug->UnLock();
      //$this->Debug->Close();
      //$this->Debug->Done();
      }
      parent::Close();
    }

    Function Debug_Write($Data)
    {
      $this->Debug->Set_Mode('Proxy.log');
      $this->Debug->Write($Data);
    }
  }
?>