<?
  $Loader->Begin_Class('/Tmpl/W2/Tag/Item');
 
  $Loader->Parent_Class('/Object/Release');
 
  Class C_Tmpl_W2_Tag_Item Extends C_Object_Release
  {
    Var $tagName     ; // Имя тега
 
    Var $Document    ; // Template файл
    Var $ListNext = False ; // Следующий тег в списке
    Var $ListPrev = False ; // Предыдущий тег в списке
 
  //Var $Attributes  ; // Аттрибуты
 
  //Var $childNodes  ; // Список детей
 
  //Var $firstChild  ; // Первый ребёнок
  //Var $lastChild   ; // Последний ребёнок
  //Var $nextSibling ; // Следующий узел дерева
  //Var $parentNode  ; // Отец данного узла
 
    Function _Init(Array $Args)
    {
      parent::_Init($Args);
    }
 
    Function _Done()
    {
      If($this->Document)
        $this->Delete(False);
      parent::_Done();
    }
    
    Function ListFirst($ADocument)
    {
      $this->Document = $ADocument;
      $this->ListPrev = False;
      $this->ListNext = False;
      $this->Document->FirstTag = $this ;
      $this->Document->LastTag  = $this ;
    }
 
    Function ListAdd($ATag)
    {
      $ATag->Document = $this->Document ;
      $ATag->ListPrev = $this           ;
      $ATag->ListNext = $this->ListNext ;
      $this->ListNext = $ATag           ;
    //If($this->Document->LastTag===$this)
      If($ATag->ListNext)
        $ATag->ListNext->ListPrev=$ATag;
      Else
        $this->Document->LastTag=$ATag;
    }
 
    Function ListInsert($ATag)
    {
      $ATag->Document = $this->Document ;
      $ATag->ListPrev = $this->ListPrev ;
      $ATag->ListNext = $this           ;
      $this->ListPrev = $ATag           ;
    //If($this->Document->LastTag===$this)
      If($ATag->ListPrev)
        $ATag->ListPrev->ListNext=$ATag;
      Else
        $this->Document->FirstTag=$ATag;
    }
 
    Function _Clear()
    {
      $Res=$this->ListNext;
      $this->ListPrev=False;
      $this->ListNext=False;
      $this->Document=False;
      Return $Res;
    }
 
    Function ListDeleteTo($ETag)
    {
      If($this->ListPrev)
        $this->ListPrev->ListNext=$ETag->ListNext;
      Else
        $this->Document->FirstTag=$ETag->ListNext;
      If($ETag->ListNext)
        $ETag->ListNext->ListPrev=$this->ListPrev;
      Else
        $this->Document->LastTag =$this->ListPrev;
      $LTag=$this;
      While($LTag!==$ETag)
        $LTag=$LTag->_Clear();
      $Res=$LTag->_Clear();
      Return $Res;
    }
 
    Function ListDelete()
    {
      If($this->ListPrev)
        $this->ListPrev->ListNext=$this->ListNext;
      Else
        $this->Document->FirstTag=$this->ListNext;
      If($this->ListNext)
        $this->ListNext->ListPrev=$this->ListPrev;
      Else
        $this->Document->LastTag =$this->ListPrev;
      $Res=$this->_Clear();
      $this->Done();
      Return $Res;
    }
 
    Function Delete($ZSub=True)
    {
      Return $this->ListDelete();
    }
  }
?>