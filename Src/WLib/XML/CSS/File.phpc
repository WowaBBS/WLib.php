<?
  $Loader->Parent_Class('/XML/CSS/Base');
  $Loader->Load_Lib('/XML/CSS/Parser');
  $Loader->Load_Class('/XML/CSS/Style');
 
  Class C_XML_CSS_File Extends C_XML_CSS_Base
  {
    Function _Done()
    {
      $this->Clear();
      Parent::_Done();
    }
 
    Function Clear()
    {
      ForEach($this->Styles As $k=>$tmp)
        $this->Styles[$k]->_UnLock();
      Parent::Clear();
    }
 
    Function AddKeyLeft($Key)
    {
      $St=$this->Styles;
      ForEach($St As $k=>$v)
      {
        $S=$St[$k];
        $nk1=Explode(',', $S->Key);
        $nk2=[];
        ForEach($nk1 As $nki)
          $nk2[]=$Key.' '.$nki;
        $S->Key=Implode(',', $nk2);
      }
    }
 
    Function AddArr($Arr)
    {
      If(!$Arr)
        Return;
      $Z=0;
      $Key='';
      $St=[[], []];
      ForEach($Arr[0]As $k=>$v)
        If(StrLen($v)>2 && SubStr($v, 0, 2)==='/*')
        {}
        ElseIf($Arr[1][$k]==$v)
        {
          If($Z>9)
          {
            $St[0][]=$v;
            $St[1][]=$Arr[1][$k];
          }
          ElseIf($Z)
            $Key.=' ';
        }
        Else
        {
          If($v=='{')
          {
            If($Z>9)
            {
            //Trigger_Error('XML/CSS/File "{" in '.$k);
              $Z++;
              $St[0][]=$v;
              $St[1][]=$Arr[1][$k];
            }
            Else
            {
              $Key=Trim($Key);
              $Z=10;
              $St=[[], []];
            }
          }
          ElseIf($Z>10)
          {
            If($v=='}')
              $Z--;
            $St[0][]=$v;
            $St[1][]=$Arr[1][$k];
          }
          ElseIf($v=='}')
          {
            If($Z<10)
              Trigger_Error('XML/CSS/File "}" in '.$k);
            Else
            {
            //If(IsSet($this->Styles[$Key]))
            //  UnSet($this->Styles[$Key]);
            //$this->Styles[$Key]=$this->Create_Object('/XML/CSS/Style');
            //$this->Styles[$Key]->AddArr($St);
              If(StrNCmp(StrToLower($Key), '@media ', 7)==0)
                $Style=$this->Create_Object('/XML/CSS/File');
              Else
                $Style=$this->Create_Object('/XML/CSS/Style');
              $Style->Key=$Key;
              $Style->AddArr($St);
              $this->Styles[]=$Style;
              $Z=0;
              $Key='';
            }
          }
          ElseIf($Z>9)
          {
            $St[0][]=$v;
            $St[1][]=$Arr[1][$k];
          }
          ElseIf($Z)
            $Key.=$v;
          Else
          {
            $Key=$v;
            $Z=1;
          }
        }
    }
 
    Function AddFile($Str)
    {
      $this->AddStr(File_Get_Contents($Str));
    }
 
    Function Delete_By_Key($Key)
    {
      $this->Styles[$Key]->Done();
      UnSet($this->Styles[$Key]);
    }
 
    Function Make()
    {
      $Res=[];
      ForEach($this->Styles As $v)
        $Res[]=$v->Make();
      If($this->Key!==False)
        $Res=[$this->Key, '{', Implode("\n", $Res), '}'];
      Else
        $Res[]='';
      Return Implode("\n", $Res);
    }

    Function IsCssFile() { Return True; }
  }
?>